name: Docker Image CI

on:
  push:
    branches: [ "uat" ]
  workflow_dispatch:

env:
  AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  AWS_REGION: ap-southeast-2
  REPO_NAME: ${{ vars.REPO_NAME }}

jobs:

  build-docker-image:
    name: Build docker image
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Build the Docker image
      run: |
        echo "start building docker image"
        timestamp=$(date +%s)
        tag="rstudio-server:${timestamp}"
        docker build . --file Dockerfile --tag ${tag}

  push-to-ECR:
    name: Push docker image to AWS ECR
    needs: build-docker-image
    runs-on: ubuntu-latest

    steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ env.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ env.AWS_SECRET_KEY }}
        aws-region: ${{ env.AWS_REGION }}
    - name: Push to AWS ECR
      run: |
        echo "Logging in to AWS ECR"
        aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com
        echo "Creating repository if not exist"
        aws ecr describe-repositories --repository-names ${{ env.REPO_NAME }} || aws ecr create-repository --repository-name ${{ env.REPO_NAME }}
        echo "Tagging the docker image"
        echo ${tag}
        docker tag ${tag} ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.REPO_NAME }}
        echo "Push to AWS ECR"
        docker push ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.PREO_NAME }}
      env:
        AWS_ACCESS_KEY_ID: ${{ env.AWS_ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ env.AWS_SECRET_KEY }}
        AWS_DEFAULT_REGION: ${{ env.AWS_REGION }}
        
  create-task-defination:
    name: Create the task defination running in ECS
    needs: push-to-ECR
    runs-on: ubuntu-latest

    steps:
    - name: Create task defination running in ECS
      run: |
       echo "Creating task defination"
       aws ecs describe-task-definition --task-definition ${{ env.TASK_NAME }}   || aws ecs register-task-definition --cli-input-json file://${GITHUB_WORKSPACE}/tasks/task_def.json
       echo "Finshing Successfully"
      
  
