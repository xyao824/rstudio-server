name: Docker Image CI
on:
  push:
    branches: [ "uat" ]
  workflow_dispatch:
env:
  AWS_ACCESS_KEY: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  AWS_REGION: ap-southeast-2
  REPO_NAME: ${{ vars.REPO_NAME }}
jobs:
  build-docker-image:
    name: Build docker image
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.build.outputs.tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build the Docker image
        id: build
        run: |
          echo "start building docker image"
          tag=$(date +%s)
          docker build . --file Dockerfile --tag ${tag}
          echo "tag=${tag}" >> $GITHUB_OUTPUT
  push-to-ECR:
    name: Push docker image to AWC ECR
    needs: build-docker-image
    runs-on: ubuntu-latest
    outputs:
      image: ${{ steps.push-image.outputs.image }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ env.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ env.AWS_SECRET_KEY }}
          aws-region: ${{ env.AWS_REGION }}
          mask-aws-account-id: false
      - name: Login to Amazon ECR
        id: login-ecr-pf
        uses: aws-actions/amazon-ecr-login@v2
      - name: Build & Push
        id: push-image
        shell: bash
        env:
          # DOCKER_IMAGE: ${{ env.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.PREO_NAME }}
          REGISTRY: ${{ steps.login-ecr-pf.outputs.registry }}
          REPOSITORY: ${{ env.REPO_NAME }}
          IMAGE_TAG: ${{ needs.build-docker-image.outputs.tag }}
        run: |
          echo $REGISTRY
          echo $REPOSITORY
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
          echo "image=$REGISTRY/$REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT
      - name: Logout of Amazon ECR
        shell: bash
        run: docker logout ${{ steps.login-ecr-pf.outputs.registry }}

  create-task-defination:
    name: Create and deploy the service in ECS
    needs: push-to-ECR
    runs-on: ubuntu-latest
    steps:
      - name: Create the task defination running in ECS
        id: task-def
        # uses: aws-actions/amazon-ecs-render-task-definition@v1
        run: |
          echo ${{ needs.push-to-ECR.outputs.image }}
        with:
          task-definition: task_def.json
          container-name: rstudio-server-container
          image: ${{ needs.push-to-ECR.outputs.image }}

      - name: Deploy to Amazon ECS service
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: rstudio-server
          cluster: rstudio-server


    # steps:
    # - name: Create task defination running in ECS
    #   run: |
    #    echo "Creating task defination"
    #    aws ecs describe-task-definition --task-definition {{ env.TASK_NAME }}   || aws ecs register-task-definition --cli-input-json file://${GITHUB_WORKSPACE}/tasks/task_def.json
    #    echo "Finshing Successfully"
      
  
